var content = document.getElementById("model");
var button = document.getElementById("show-more")

button.onclick = function(){

	if(content.className == "open"){
		content.className = "";
		button.innerHTML = "More";

	} else {
		content.className = "open";
		button.innerHTML = "Less";
	}

};

/* Add a black background color to the top navigation bar */
.topnav {
    overflow: hidden;
    background-color: #e9e9e9;
  }
  
  /* Style the links inside the navigation bar */
  .topnav a {
    float: left;
    display: block;
    color: black;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
  }
  
  /* Change the color of links on hover */
  .topnav a:hover {
    background-color: #ddd;
    color: black;
  }
  
  /* Style the "active" element to highlight the current page */
  .topnav a.active {
    background-color: #2196F3;
    color: white;
  }
  
  /* Style the search box inside the navigation bar */
  .topnav input[type=text] {
    float: right;
    padding: 6px;
    border: none;
    margin-top: 8px;
    margin-right: 16px;
    font-size: 17px;
  }
  
  /* When the screen is less than 600px wide, stack the links and the search field vertically instead of horizontally */
  @media screen and (max-width: 600px) {
    .topnav a, .topnav input[type=text] {
      float: none;
      display: block;
      text-align: left;
      width: 100%;
      margin: 0;
      padding: 14px;
    }
    .topnav input[type=text] {
      border: 1px solid #ccc;
    }
  }


  #model {
	width: 300px;
	border: 1px solid #c1c1c1;
	margin: 20px 10px;
	padding: 0 5px;
	float: left;
	max-height: 300px;
	overflow: hidden;
	

	-webkit-transition: max-height 0.7s;
	-moz-transition: max-height 0.7s;
	transition: max-heigth 0.7s;

}


#show-more {
	display: block;
	background-color: #75868E;
	width: 100px;
	font-size: 12px;
	text-transform: uppercase;
	display: inline-block;
	margin: 20px auto;
	cursor: pointer;
	height: 15px;
	padding: 10px 0; 
	
}

#model.open {
	max-height: 1000px;
	

	-webkit-transition: max-heigth 0.7s;
	-moz-transition: max-heigth 0.7s;
	transition: max-heigth 0.7s;
	
	
}

    <!-- <script type="text/javascript"> function Redirect() { window.location = "index.html"; } </script> -->
    <!-- <form> <input type="button" value="Back to Homepage" onclick="Redirect();" /> </form> -->


<!--Creates the popup body-->
<div class="popup-overlay">
    <!--Creates the popup content-->
    <div class="popup-content">
      <h2>Pop-Up</h2>
      <p> This is an example pop-up that you can make using jQuery.</p>
      <!--popup's close button-->
      <button class="close">Close</button> </div>
  </div>
  <!--Content shown when popup is not displayed-->
  <h2>jQuery Pop-Up Example</h2>
  <button class="open">Open</button>


  //appends an "active" class to .popup and .popup-content when the "Open" button is clicked
$(".open").on("click", function() {
    $(".popup-overlay, .popup-content").addClass("active");
  });
  
  //removes the "active" class to .popup and .popup-content when the "Close" button is clicked 
  $(".close, .popup-overlay").on("click", function() {
    $(".popup-overlay, .popup-content").removeClass("active");
  });


  html {
    font-family: "Helvetica Neue", sans-serif;
    width: 100%;
    color: #666666;
    text-align: center;
  }
  
  .popup-overlay {
    /*Hides pop-up when there is no "active" class*/
    visibility: hidden;
    position: absolute;
    background: #ffffff;
    border: 3px solid #666666;
    width: 50%;
    height: 50%;
    left: 25%;
  }
  
  .popup-overlay.active {
    /*displays pop-up when "active" class is present*/
    visibility: visible;
    text-align: center;
  }
  
  .popup-content {
    /*Hides pop-up content when there is no "active" class */
    visibility: hidden;
  }
  
  .popup-content.active {
    /*Shows pop-up content when "active" class is present */
    visibility: visible;
  }
  
  button {
    display: inline-block;
    vertical-align: middle;
    border-radius: 30px;
    margin: .20rem;
    font-size: 1rem;
    color: #666666;
    background: #ffffff;
    border: 1px solid #666666;
  }
  
  button:hover {
    border: 1px solid #666666;
    background: #666666;
    color: #ffffff;
  }

  
        <!-- <form> <input type="button" value="Log Out" onclick="logOutAndRedirectToHomepage();" /> </form> -->



        /*
function lClick()
{
    //e.preventDefault();
    console.log("clicksss");
   /* const username = loginUser.value;
    const password = loginPass.value;

    // var userId = firebase.auth().signInWithUserAndPassword(username,password);
    // userId.catch(e=> alert(e.message));
    firebase.auth().createUserWithEmailAndPassword(username, password).catch(function (error) {
        // Handle Errors here.
        /*var errorCode = error.code;
        var errorMessage = error.message;
        loginErrorMsg.style.opacity = 1;*/
        // ...
    //});*/

//}

    /* return firebase.database().ref('/users/' + userId).once('value').then(function (snapshot) {
    var username = (snapshot.val() && snapshot.val().username) || 'Anonymous';
    // ...
});*/

/*  if (username === "user" && password === "web_dev") {
    alert("You have successfully logged in.");
    location.reload();
} else {
    loginErrorMsg.style.opacity = 1;
}
});*/


   /* const signOutButton = document.getElementById("signOutButton");

    signOutButton.onclick = function() {
  
        firebase.auth().signOut().then(()=>{
            console.log("logged out");
        });
    }
    */

        // firebase.auth().onAuthStateChanged(function (user) {
    //     if (user) {
    //         user.getIdTokenResult().then(idTokenResult => {
    //             user.renter = idTokenResult.claims.admin;
    //             if (user.renter != true) {
    //                 console.log("unauthorized access!");
    //                 //window.location.href=".html";
    //             }
    //         })
    //         // User is signed in.
    //         console.log('logged');
    //     } else {
    //         // No user is signed in.
    //         console.log('not logged');
    //     }
    // });
    // // Get a reference to the database service

    // const database = firebase.database();
    // const auth = firebase.auth();