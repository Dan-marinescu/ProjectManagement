var content = document.getElementById("model");
var button = document.getElementById("show-more")

button.onclick = function(){

	if(content.className == "open"){
		content.className = "";
		button.innerHTML = "More";

	} else {
		content.className = "open";
		button.innerHTML = "Less";
	}

};

/* Add a black background color to the top navigation bar */
.topnav {
    overflow: hidden;
    background-color: #e9e9e9;
  }
  
  /* Style the links inside the navigation bar */
  .topnav a {
    float: left;
    display: block;
    color: black;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
  }
  
  /* Change the color of links on hover */
  .topnav a:hover {
    background-color: #ddd;
    color: black;
  }
  
  /* Style the "active" element to highlight the current page */
  .topnav a.active {
    background-color: #2196F3;
    color: white;
  }
  
  /* Style the search box inside the navigation bar */
  .topnav input[type=text] {
    float: right;
    padding: 6px;
    border: none;
    margin-top: 8px;
    margin-right: 16px;
    font-size: 17px;
  }
  
  /* When the screen is less than 600px wide, stack the links and the search field vertically instead of horizontally */
  @media screen and (max-width: 600px) {
    .topnav a, .topnav input[type=text] {
      float: none;
      display: block;
      text-align: left;
      width: 100%;
      margin: 0;
      padding: 14px;
    }
    .topnav input[type=text] {
      border: 1px solid #ccc;
    }
  }


  #model {
	width: 300px;
	border: 1px solid #c1c1c1;
	margin: 20px 10px;
	padding: 0 5px;
	float: left;
	max-height: 300px;
	overflow: hidden;
	

	-webkit-transition: max-height 0.7s;
	-moz-transition: max-height 0.7s;
	transition: max-heigth 0.7s;

}


#show-more {
	display: block;
	background-color: #75868E;
	width: 100px;
	font-size: 12px;
	text-transform: uppercase;
	display: inline-block;
	margin: 20px auto;
	cursor: pointer;
	height: 15px;
	padding: 10px 0; 
	
}

#model.open {
	max-height: 1000px;
	

	-webkit-transition: max-heigth 0.7s;
	-moz-transition: max-heigth 0.7s;
	transition: max-heigth 0.7s;
	
	
}

    <!-- <script type="text/javascript"> function Redirect() { window.location = "index.html"; } </script> -->
    <!-- <form> <input type="button" value="Back to Homepage" onclick="Redirect();" /> </form> -->


<!--Creates the popup body-->
<div class="popup-overlay">
    <!--Creates the popup content-->
    <div class="popup-content">
      <h2>Pop-Up</h2>
      <p> This is an example pop-up that you can make using jQuery.</p>
      <!--popup's close button-->
      <button class="close">Close</button> </div>
  </div>
  <!--Content shown when popup is not displayed-->
  <h2>jQuery Pop-Up Example</h2>
  <button class="open">Open</button>


  //appends an "active" class to .popup and .popup-content when the "Open" button is clicked
$(".open").on("click", function() {
    $(".popup-overlay, .popup-content").addClass("active");
  });
  
  //removes the "active" class to .popup and .popup-content when the "Close" button is clicked 
  $(".close, .popup-overlay").on("click", function() {
    $(".popup-overlay, .popup-content").removeClass("active");
  });


  html {
    font-family: "Helvetica Neue", sans-serif;
    width: 100%;
    color: #666666;
    text-align: center;
  }
  
  .popup-overlay {
    /*Hides pop-up when there is no "active" class*/
    visibility: hidden;
    position: absolute;
    background: #ffffff;
    border: 3px solid #666666;
    width: 50%;
    height: 50%;
    left: 25%;
  }
  
  .popup-overlay.active {
    /*displays pop-up when "active" class is present*/
    visibility: visible;
    text-align: center;
  }
  
  .popup-content {
    /*Hides pop-up content when there is no "active" class */
    visibility: hidden;
  }
  
  .popup-content.active {
    /*Shows pop-up content when "active" class is present */
    visibility: visible;
  }
  
  button {
    display: inline-block;
    vertical-align: middle;
    border-radius: 30px;
    margin: .20rem;
    font-size: 1rem;
    color: #666666;
    background: #ffffff;
    border: 1px solid #666666;
  }
  
  button:hover {
    border: 1px solid #666666;
    background: #666666;
    color: #ffffff;
  }

  
        <!-- <form> <input type="button" value="Log Out" onclick="logOutAndRedirectToHomepage();" /> </form> -->



        /*
function lClick()
{
    //e.preventDefault();
    console.log("clicksss");
   /* const username = loginUser.value;
    const password = loginPass.value;

    // var userId = firebase.auth().signInWithUserAndPassword(username,password);
    // userId.catch(e=> alert(e.message));
    firebase.auth().createUserWithEmailAndPassword(username, password).catch(function (error) {
        // Handle Errors here.
        /*var errorCode = error.code;
        var errorMessage = error.message;
        loginErrorMsg.style.opacity = 1;*/
        // ...
    //});*/

//}

    /* return firebase.database().ref('/users/' + userId).once('value').then(function (snapshot) {
    var username = (snapshot.val() && snapshot.val().username) || 'Anonymous';
    // ...
});*/

/*  if (username === "user" && password === "web_dev") {
    alert("You have successfully logged in.");
    location.reload();
} else {
    loginErrorMsg.style.opacity = 1;
}
});*/


   /* const signOutButton = document.getElementById("signOutButton");

    signOutButton.onclick = function() {
  
        firebase.auth().signOut().then(()=>{
            console.log("logged out");
        });
    }
    */

        // firebase.auth().onAuthStateChanged(function (user) {
    //     if (user) {
    //         user.getIdTokenResult().then(idTokenResult => {
    //             user.renter = idTokenResult.claims.admin;
    //             if (user.renter != true) {
    //                 console.log("unauthorized access!");
    //                 //window.location.href=".html";
    //             }
    //         })
    //         // User is signed in.
    //         console.log('logged');
    //     } else {
    //         // No user is signed in.
    //         console.log('not logged');
    //     }
    // });
    // // Get a reference to the database service

    // const database = firebase.database();
    // const auth = firebase.auth();

    // firebase.initializeApp(config);

                //  console.log("got data");


                    <!-- <table id="myTable">
        <tr>
            <th>
                <div id="locationCol">Edit Info<img src="/images/sort icon.png"></div>
            </th>
            <th>
                <div id="locationCol">Location<img src="/images/sort icon.png"></div>
            </th>
            <th>
                <div id="roomsCol">Rooms<img src="/images/sort icon.png"></div>
            </th>
            <th>
                <div id="priceCol">Price<img src="/images/sort icon.png"></div>
            </th>
            <th>
                <div id="ownerNameCol">Owner name<img src="/images/sort icon.png"></div>
            </th>
            <th>Phone number</th>
            <th>picture</th>
        </tr>
        <img>
    </table> -->



    <!-- <script src="/js/rentApp.js"></script> -->

                    <!-- <p>Enter New Email</p>
                <input type="text" name="newPhone" id="recoveryWindow" placeholder="New Phone Number">
            <input type="text" name="newName" id="recoveryWindow" placeholder="Full Name">
            <input type="text" name="newEmail" id="recoveryWindow" placeholder="New Email"> -->


                            <!-- <th>
                    <div id="locationCol">Edit Info<img src="/images/sort icon.png"></div>
                </th> -->

        // Get the <span> element that closes the modal
    // const span = document.getElementsByClassName("close")[0];

    // When the user clicks on <span> (x), close the modal
    // span.onclick = function () {
    //     modal.style.display = "none";
    // }

    // function editInfoFunction() {
    //     const sss = document.getElementById("myTable");
    //     sss.style.display = "block";
    // }

    // example
    // fetch("/editData", {
    //     method: "POST",
    //     headers: {
    //         Accept: "application/json",
    //         "Content-Type": "application/json",
    //         "CSRF-Token": Cookies.get("XSRF-TOKEN"),
    //     },

    //     body: JSON.stringify({}),
    // })
    //     .then(response => response.json())
    //     .then(function (resJ) {
    //         console.log(resJ.data);
    //         for (var i = 0; i < resJ.data.length; i++) {
    //             var obj = resJ.data[i];

    //             sss.innerHTML += '<tl>' + '<td>' + '<button class="btn btn-outline-success my-2 my-sm-0" type="submit" onclick=editInfoFunction();>Edit Info</button>' + '</td>' +
    //                 '<td><a href="#">' + obj.location + '</a></td>' +
    //                 '<td><a href="#">' + obj.rooms + '</a></td>' +
    //                 '<td><a href="#">' + obj.price + '</a></td>' +
    //                 '<td><a href="#">' + obj.rating + '</a></td>' +
    //                 '<td><a href="#">' + obj.ownerName + '</a></td>' +
    //                 '<td><a href="#">' + obj.phoneNumber + '</a></td>' +
    //                 '<td><a href="#"><img src="' + hasImg(obj.hasPictures) + '"></a></td>' +
    //                 '</tl>';
    //         }
    //     }).catch(function (error) {
    //         console.log('data error');
    //     });






    //not in use yet
    // function sortTable(jsonInfo) {
    //     fetch("/rU", {
    //         method: "POST",
    //         headers: {
    //             Accept: "application/json",
    //             "Content-Type": "application/json",
    //             "CSRF-Token": Cookies.get("XSRF-TOKEN"),
    //         },
    //         body: JSON.stringify(jsonInfo),
    //     })
    //         .then(response => response.json())
    //         .then(function (resJ) {
    //             console.log(resJ.data);
    //             for (var i = 0; i < resJ.data.length; i++) {
    //                 var obj = resJ.data[i];


    //                 sss.innerHTML += '<tl>' + '<td>' + '<button class="btn btn-outline-success my-2 my-sm-0" type="submit" onclick=editInfoFunction();>Edit Info</button>' + '</td>' +
    //                     '<td><a href="#">' + obj.location + '</a></td>' +
    //                     '<td><a href="#">' + obj.rooms + '</a></td>' +
    //                     '<td><a href="#">' + obj.price + '</a></td>' +
    //                     '<td><a href="#">' + obj.rating + '</a></td>' +
    //                     '<td><a href="#">' + obj.ownerName + '</a></td>' +
    //                     '<td><a href="#">' + obj.phoneNumber + '</a></td>' +
    //                     '<td><a href="#"><img src="' + hasImg(obj.hasPictures) + '"></a></td>' +
    //                     '</tl>';
    //             }


    //         }).catch(function (error) {
    //             console.log('data error');
    //         });
    // }

              //  const sss = document.getElementById("myTable");
                <!-- <form class="form-inline my-2 my-lg-0">
                    <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                </form> -->


                            // var cancelSpan = document.getElementsByClassName("close")[0];
            // cancelSpan.onclick = function () {
            //     modalVar.style.display = "none";
            // }
            // window.onclick = function (event) {
            //     if (event.target == modalVar) {
            //         modalVar.style.display = "none";
            //     }
            // }

            // var cancelSpan = document.getElementsByClassName("cancelbtn")[0];
            // cancelSpan.onclick = function () {
            //     modalVar.style.display = "none";
            // }
            // window.onclick = function (event) {
            //     if (event.target == modalVar) {
            //         modalVar.style.display = "none";
            //     }
            // }

            // var saveSpan = document.getElementsByClassName("saveChangesBtn")[0];
            // saveSpan.onclick = function () {
            //     saveChanges();
            //     modalVarTwo.style.display = "none";
            // }
            // window.onclick = function (event) {
            //     if (event.target == modalVarTwo) {
            //         modalVarTwo.style.display = "none";
            //     }
            // }


                        // window.onclick = function (event) {
            //     if (event.target == modalVar) {
            //         modalVar.style.display = "none";
            //     }
            // }



                        // window.onclick = function (event) {
            //     if (event.target == modalVarTwo) {
            //         modalVarTwo.style.display = "none";
            //     }
            // }


                    /*NOT FINISHED YET - have to send eequest to server to update the database*/
        // function saveChanges() {
        //     {
        //         { email: document.getElementById('newEmail') }
        //         { fullName: document.getElementById('fullName') }
        //         { phoneNumber: document.getElementById('newPhone') }
        //     }
        // }



              <!-- <div class="container"> -->
      <!-- <div class="dropdown"> -->
      <!-- <label for="username">Choose Your Question</label> -->
      <!-- <button type="button" data-toggle="dropdown">Questions<span class="caret"></span></button>
          <ul class="dropdown-menu">
            <li><a>Who is your favorite lecturer?</a></li>
            <li><a>What is your first pet name?</a></li>
            <li><a>What is your favorite food?</a></li>
            <li><a>What is your favorite song?</a></li>
          </ul>
        </div> -->
      <!-- </div> -->


            <!-- <button type="button" id="logoutButton" class="loginFormButton">Log Out</button> -->
      <!-- <label name = "forgot passowrd" id="forgotPass" class = "loginFormField">Forgot Password/Username?</label>
      <label name = "create new user" id="createUser" class = "loginFormField">Create New User</label> -->


              <!-- <input value="Choose" type="submit" onclick="myfunc()"> -->
        <!-- </form> -->

        <!-- <form id="recoveryForm"> -->
        <!-- </form> -->

        <!-- <label for="answer"><br><br>Choose Your Question<br></label> -->

        <!-- <form> -->

                <!-- <p>Enter Username</p> -->
        <!-- <form id="recoveryForm"> -->
        <!-- <button id="checkUsernameBtn">Next</button> -->
        <!-- </form> -->


         <!-- <form>
                        <label class="nativeDatePicker">Until Date:
                            <input type="date" id="endDateModalThree" name="untilDateThree"> -->
                            <!-- <script>
                                var dateControl = document.querySelector('input[type="date"]');
                                dateControl.value = '<input type="date" name="bday">';
                            </script> -->
                            <!-- <input type="text" name="bday"> -->
                            <!-- <span class="validity"></span>
                        </label>

                        <fieldset class="fallbackDatePicker" hidden>
                            <legend class="fallbackLabel">Enter your birthday:</legend>

                            <label>
                                Day:
                                <select name="day"></select>
                            </label>

                            <label>
                                Month:
                                <select name="month">
                                    <option>January</option>
                                    <option>February</option>
                                    <option>March</option>
                                    <option>April</option>
                                    <option>May</option>
                                    <option>June</option>
                                    <option>July</option>
                                    <option>August</option>
                                    <option>September</option>
                                    <option>October</option>
                                    <option>November</option>
                                    <option>December</option>
                                </select>
                            </label>

                            <label>
                                Year:
                                <select name="year"></select>
                            </label>
                        </fieldset>
                    </form> -->


                                        <!-- <form>
                        <label class="nativeDatePicker">From Date:
                            <input type="date" id="startDateModalThree" name="fromDateThree">
                            <span class="validity"></span>
                        </label>

                        <fieldset class="fallbackDatePicker" hidden>
                            <legend class="fallbackLabel">Enter your birthday:</legend>

                            <label>
                                Day:
                                <select name="day"></select>
                            </label>

                            <label>
                                Month:
                                <select name="month">
                                    <option>January</option>
                                    <option>February</option>
                                    <option>March</option>
                                    <option>April</option>
                                    <option>May</option>
                                    <option>June</option>
                                    <option>July</option>
                                    <option>August</option>
                                    <option>September</option>
                                    <option>October</option>
                                    <option>November</option>
                                    <option>December</option>
                                </select>
                            </label>

                            <label>
                                Year:
                                <select name="year"></select>
                            </label>
                        </fieldset>
                    </form> -->

                    <!-- <p>Until date: <input id="endDateModal" name="untilDate" type="text" size="30"></p> -->



                                        <!-- <p>From date: <input id="startDateModal" name="fromDate" type="text" size="30"></p> -->


                <!-- <label for="phone"><b>New Phone Number</b></label> -->
                <!-- <input id="newPhone" type="text" placeholder="Enter Phone Number" name="phone" required> -->

                
                <!-- <label for="fullName"><b>New Name</b></label>
                <input id="fullName" type="text" placeholder="Enter Full Name" name="fullName" required> -->


                <!-- <p>From date: <input id="startDateModal" name="fromDate" type="text" size="30"></p> -->

                        <!-- <form>
                            <label class="nativeDatePicker">From Date:
                                <input type="date" id="startDateModal" name="fromDate">
                                <span class="validity"></span>
                            </label>

                            <fieldset class="fallbackDatePicker" hidden>
                                <legend class="fallbackLabel">Enter your birthday:</legend>

                                <label>
                                    Day:
                                    <select name="day"></select>
                                </label>

                                <label>
                                    Month:
                                    <select name="month">
                                        <option>January</option>
                                        <option>February</option>
                                        <option>March</option>
                                        <option>April</option>
                                        <option>May</option>
                                        <option>June</option>
                                        <option>July</option>
                                        <option>August</option>
                                        <option>September</option>
                                        <option>October</option>
                                        <option>November</option>
                                        <option>December</option>
                                    </select>
                                </label>

                                <label>
                                    Year:
                                    <select name="year"></select>
                                </label>
                            </fieldset>
                        </form> -->


                        <!-- <p>Until date: <input id="endDateModal" name="untilDate" type="text" size="30"></p> -->

                        <!-- <form>
                            <label class="nativeDatePicker">Until Date:
                                <input type="date" id="endDateModal" name="untilDate">
                                <span class="validity"></span>
                            </label>

                            <fieldset class="fallbackDatePicker" hidden>
                                <legend class="fallbackLabel">Enter your birthday:</legend>

                                <label>
                                    Day:
                                    <select name="day"></select>
                                </label>

                                <label>
                                    Month:
                                    <select name="month">
                                        <option>January</option>
                                        <option>February</option>
                                        <option>March</option>
                                        <option>April</option>
                                        <option>May</option>
                                        <option>June</option>
                                        <option>July</option>
                                        <option>August</option>
                                        <option>September</option>
                                        <option>October</option>
                                        <option>November</option>
                                        <option>December</option>
                                    </select>
                                </label>

                                <label>
                                    Year:
                                    <select name="year"></select>
                                </label>
                            </fieldset>
                        </form> -->

                     /*
    fetch("/requestRenter", {
        method: "POST",
        headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
            "CSRF-Token": Cookies.get("XSRF-TOKEN"),
        },
        body: JSON.stringify({}),
    })
        .then(response => response.json())
        // eslint-disable-next-line prefer-arrow-callback
        .then(function (resJ) {
            console.log(resJ.data);
            // eslint-disable-next-line promise/always-return
            for (var i = 0; i < resJ.data.length; i++) {
                var obj = resJ.data[i];
                //console.log(obj.id);
                sss.innerHTML += '<tl>' +
                    '<td><a href="#">' + obj.data.location + '</a></td>' +
                    '<td><a href="#">' + obj.data.rooms + '</a></td>' +
                    '<td><a href="#">' + obj.data.price + '</a></td>' +
                    '<td><a href="#">' + obj.data.rating + '</a></td>' +
                    '<td><a href="#">' + obj.data.ownerName + '</a></td>' +
                    '<td><a href="#">' + obj.data.startDate + '</a></td>' +
                    '<td><a href="#">' + obj.data.endDate + '</a></td>' +
                    '<td><a href="#">' + obj.data.phoneNumber + '</a></td>' +
                    '<td><a href="#"><img src="' + hasImg(obj.data.hasPictures) + '"></a></td>' +
                    '<td style="display:none;"><button value=' + obj.id + ' ></button></td>' +
                    '</tl>';
                //note: obj.id is a unique unit-id
            }
            addRowHandlers();

        }).catch(function (error) {
            console.log('data error');
        });*/   
